package com.tss.policy.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping("/policyapp")
public class PolicyController {

    @Autowired
    private PolicyService policyService;

    // ---------------- Get all policies (paginated) ----------------
    @GetMapping("/policies")
    public ResponseEntity<PolicyResponsePage> readAllPolicies(
            @RequestParam(defaultValue = "10") int pagesize,
            @RequestParam(defaultValue = "0") int pageno) {
        return ResponseEntity.ok(policyService.readAllPolicies(
                org.springframework.data.domain.PageRequest.of(pageno, pagesize)
        ));
    }

    // ---------------- Add a new policy ----------------
    @PostMapping("/policies")
    public ResponseEntity<PolicyResponseDto> addNewPolicy(@RequestBody PolicyRequestDto policy) {
        return ResponseEntity.ok(policyService.addNewPolicy(policy));
    }

    // ---------------- Get policy by ID ----------------
    @GetMapping("/policies/{id}")
    public ResponseEntity<Policy> readPolicyById(@PathVariable Long id) {
        return ResponseEntity.of(policyService.findById(id));
    }

    // ---------------- Get policy by Policy Number ----------------
    @GetMapping("/policies/number")
    public ResponseEntity<Policy> getPolicyByNumber(@RequestParam String policyNumber) {
        return ResponseEntity.of(policyService.findByPolicyNumber(policyNumber));
    }

    // ---------------- Delete policy by ID ----------------
    @DeleteMapping("/policies/{id}")
    public ResponseEntity<String> deletePolicyById(@PathVariable Long id) {
        policyService.deletePolicy(id);
        return ResponseEntity.ok("Policy deleted successfully with ID: " + id);
    }

    // ---------------- Delete policy by Policy Number ----------------
    @DeleteMapping("/policies/number")
    public ResponseEntity<String> deletePolicyByNumber(@RequestParam String policyNumber) {
        policyService.deleteByPolicyNumber(policyNumber);
        return ResponseEntity.ok("Policy deleted successfully with number: " + policyNumber);
    }

    // ---------------- Get policies by Holder Name (paginated) ----------------
    @GetMapping("/policies/holder")
    public ResponseEntity<List<Policy>> getPoliciesByHolder(
            @RequestParam String holderName,
            @RequestParam(defaultValue = "0") int pageno,
            @RequestParam(defaultValue = "10") int pagesize) {
        return ResponseEntity.ok(
                policyService.findByHolderName(holderName,
                        org.springframework.data.domain.PageRequest.of(pageno, pagesize)).getContent()
        );
    }

    // ---------------- Get policies with duration less than X years (paginated) ----------------
    @GetMapping("/policies/duration")
    public ResponseEntity<List<Policy>> getPoliciesByDuration(
            @RequestParam int years,
            @RequestParam(defaultValue = "0") int pageno,
            @RequestParam(defaultValue = "10") int pagesize) {
        return ResponseEntity.ok(
                policyService.findPoliciesWithDurationLessThan(years,
                        org.springframework.data.domain.PageRequest.of(pageno, pagesize)).getContent()
        );
    }
}
